scale_color_manual(values = color_pal_top10) +
custom_theme
p2
team_include <- forecast_data[,.N,by=team][N>(39000/2),team]
include_dtm <- energy_data[,dtm]
reliability_data <- rbind(
forecast_data[dtm %in% include_dtm,.(empirical = 100*mean(actual_mwh<=forecast),
TOD = "All"),
by=c("team","quantile")],
forecast_data[(hour(dtm)<=7.5 | hour(dtm)>=16.5) & dtm %in% include_dtm,
.(empirical = 100*mean(actual_mwh<=forecast),
TOD = "Overnight"),
by=c("team","quantile")],
forecast_data[(hour(dtm)>7.5 & hour(dtm)<16.5) & dtm %in% include_dtm,
.(empirical = 100*mean(actual_mwh<=forecast),
TOD = "Daytime"),
by=c("team","quantile")])
reliability_data <- reliability_data[team %in% team_include]
plot_data <- reliability_data[team%in%top_teams_fc[1:5]]
plot_data$team <- factor(plot_data$team,levels = top_teams_fc)
rel_plot <- ggplot(plot_data,aes(x=quantile,y=empirical,color=team)) +
geom_line(data=reliability_data[!team%in%top_teams_fc[1:5]],
mapping=aes(x=quantile,y=empirical,group=team),
color=gray(0.1,0.1)) +
geom_point(aes(shape=team)) + geom_line() +
geom_abline(slope = 1,intercept = 0, linetype="dashed") +
facet_wrap(~TOD,ncol=3) +
guides(color=guide_legend(title="Team (Top 5)"),
shape=guide_legend(title="Team (Top 5)")) +
scale_color_discrete(breaks=top_teams_fc) +
scale_color_manual(values = color_pal_top10) +
xlab("Nominal [%]") + ylab("Empirical [%]") +
custom_theme +
theme(aspect.ratio = 1)
rel_plot
forecast_score_plot
forecast_score_plot[,mean(pinball),by=hour(dtm)]
forecast_score_plot[team=="UI BUD",mean(pinball),by=hour(dtm)]
forecast_score_plot[team=="UI BUD",.(pinball=mean(pinball)),by=hour(dtm)]
ggplot(forecast_score_plot[team=="UI BUD",.(pinball=mean(pinball)),by=hour(dtm)],
aes(x=hour,y=pinball)) +
geom_line() +
custom_theme
forecast_score_plot
forecast_score_plot[team=="UI BUD" & hour(dtm)>7.5 & hour(dtm)<16.5,mean(pinball)]
forecast_score_plot[team=="UI BUD" & hour(dtm)>7.5 & hour(dtm)<16.5,mean(pinball)]
forecast_score_plot[team=="UI BUD" & (hour(dtm)<=7.5 | hour(dtm)>=16.5),mean(pinball)]
forecast_score_plot[team=="UI BUD" & hour(dtm)>7.5 & hour(dtm)<20.5,mean(pinball)]
forecast_score_plot[team=="UI BUD" & (hour(dtm)<=7.5 | hour(dtm)>=20.5),mean(pinball)]
team_include <- forecast_data[,.N,by=team][N>(39000/2),team]
include_dtm <- energy_data[,dtm]
reliability_data <- rbind(
forecast_data[dtm %in% include_dtm,.(empirical = 100*mean(actual_mwh<=forecast),
TOD = "All"),
by=c("team","quantile")],
forecast_data[(hour(dtm)<=7.5 | hour(dtm)>=20.5) & dtm %in% include_dtm,
.(empirical = 100*mean(actual_mwh<=forecast),
TOD = "Overnight"),
by=c("team","quantile")],
forecast_data[(hour(dtm)>7.5 & hour(dtm)<20.5) & dtm %in% include_dtm,
.(empirical = 100*mean(actual_mwh<=forecast),
TOD = "Daytime"),
by=c("team","quantile")])
reliability_data <- rbind(
forecast_data[dtm %in% include_dtm,.(empirical = 100*mean(actual_mwh<=forecast),
TOD = "All"),
by=c("team","quantile")],
forecast_data[(hour(dtm)<=7.5 | hour(dtm)>=20) & dtm %in% include_dtm,
.(empirical = 100*mean(actual_mwh<=forecast),
TOD = "Overnight"),
by=c("team","quantile")],
forecast_data[(hour(dtm)>7.5 & hour(dtm)<20) & dtm %in% include_dtm,
.(empirical = 100*mean(actual_mwh<=forecast),
TOD = "Daytime"),
by=c("team","quantile")])
team_include <- forecast_data[,.N,by=team][N>(39000/2),team]
include_dtm <- energy_data[,dtm]
reliability_data <- rbind(
forecast_data[dtm %in% include_dtm,.(empirical = 100*mean(actual_mwh<=forecast),
TOD = "All"),
by=c("team","quantile")],
forecast_data[(hour(dtm)<=7.5 | hour(dtm)>=20) & dtm %in% include_dtm,
.(empirical = 100*mean(actual_mwh<=forecast),
TOD = "Overnight"),
by=c("team","quantile")],
forecast_data[(hour(dtm)>7.5 & hour(dtm)<20) & dtm %in% include_dtm,
.(empirical = 100*mean(actual_mwh<=forecast),
TOD = "Daytime"),
by=c("team","quantile")])
reliability_data <- reliability_data[team %in% team_include]
plot_data <- reliability_data[team%in%top_teams_fc[1:5]]
plot_data$team <- factor(plot_data$team,levels = top_teams_fc)
rel_plot <- ggplot(plot_data,aes(x=quantile,y=empirical,color=team)) +
geom_line(data=reliability_data[!team%in%top_teams_fc[1:5]],
mapping=aes(x=quantile,y=empirical,group=team),
color=gray(0.1,0.1)) +
geom_point(aes(shape=team)) + geom_line() +
geom_abline(slope = 1,intercept = 0, linetype="dashed") +
facet_wrap(~TOD,ncol=3) +
guides(color=guide_legend(title="Team (Top 5)"),
shape=guide_legend(title="Team (Top 5)")) +
scale_color_discrete(breaks=top_teams_fc) +
scale_color_manual(values = color_pal_top10) +
xlab("Nominal [%]") + ylab("Empirical [%]") +
custom_theme +
theme(aspect.ratio = 1)
rel_plot
ggsave(filename = paste0("figs/reliability.",fig_format), rel_plot,
width = 1.5*fig_size_in[1],height = fig_size_in[2],units = "in")
forecast_score_plot[team=="UI BUD" & hour(dtm)>7.5 & hour(dtm)<20,mean(pinball)]
forecast_score_plot[team=="UI BUD" & (hour(dtm)<=7.5 | hour(dtm)>=20),mean(pinball)]
rel_plot
ggsave(filename = paste0("figs/reliability.",fig_format), rel_plot,
width = 1.5*fig_size_in[1],height = fig_size_in[2],units = "in")
ggsave(filename = paste0("figs/reliability.","svg"), rel_plot,
width = 1.5*fig_size_in[1],height = fig_size_in[2],units = "in")
forecast_score_plot[hour(dtm)>7.5 & hour(dtm)<20,mean(pinball),by=team]
merge(forecast_score_plot[hour(dtm)>=7.5 & hour(dtm)<20,
.(night=mean(pinball)),by=team],
forecast_score_plot[hour(dtm)<7.5 | hour(dtm)>=20,
.(day=mean(pinball)),by=team],
by = "team")
merge(forecast_score_plot[hour(dtm)>=7.5 & hour(dtm)<20,
.(night=mean(pinball)),by=team],
forecast_score_plot[hour(dtm)<7.5 | hour(dtm)>=20,
.(day=mean(pinball)),by=team],
by = "team")[order(nigth)]
merge(forecast_score_plot[hour(dtm)>=7.5 & hour(dtm)<20,
.(night=mean(pinball)),by=team],
forecast_score_plot[hour(dtm)<7.5 | hour(dtm)>=20,
.(day=mean(pinball)),by=team],
by = "team")[order(night)]
merge(forecast_score_plot[hour(dtm)>=7.5 & hour(dtm)<20,
.(day=mean(pinball)),by=team],
forecast_score_plot[hour(dtm)<7.5 | hour(dtm)>=20,
.(night=mean(pinball)),by=team],
by = "team")[order(night)]
merge(forecast_score_plot[hour(dtm)>=7.5 & hour(dtm)<20,
.(day=mean(pinball)),by=team],
forecast_score_plot[hour(dtm)<7.5 | hour(dtm)>=20,
.(night=mean(pinball)),by=team],
by = "team")[order(day)]
forecast_score_plot <- forecast_score#[dtm < "2024-03-21 00:00:00"]
merge(forecast_score_plot[hour(dtm)>=7.5 & hour(dtm)<20,
.(day=mean(pinball)),by=team],
forecast_score_plot[hour(dtm)<7.5 | hour(dtm)>=20,
.(night=mean(pinball)),by=team],
by = "team")[order(day)]
forecast_score_plot <- forecast_score#[dtm < "2024-03-21 00:00:00"]
top_teams_fc <- forecast_score_plot[,mean(pinball),by=team][order(V1,decreasing = F)][1:10,team]
forecast_score_plot <- forecast_score_plot[team %in% top_teams_fc]
setkey(forecast_score_plot,dtm)
forecast_score_plot$team <- factor(forecast_score_plot$team,levels = top_teams_fc)
forecast_score_plot[,n:=as.numeric((dtm-min(dtm))/(60*30)+1)]
merge(forecast_score_plot[hour(dtm)>=7.5 & hour(dtm)<20,
.(day=mean(pinball)),by=team],
forecast_score_plot[hour(dtm)<7.5 | hour(dtm)>=20,
.(night=mean(pinball)),by=team],
by = "team")[order(day)]
merge(forecast_score_plot[hour(dtm)>=7.5 & hour(dtm)<20,
.(day=mean(pinball)),by=team],
forecast_score_plot[hour(dtm)<7.5 | hour(dtm)>=20,
.(night=mean(pinball)),by=team],
by = "team")[order(day)]
team_include <- forecast_data[,.N,by=team][N>(39000/2),team]
include_dtm <- energy_data[,dtm]
reliability_data <- rbind(
forecast_data[dtm %in% include_dtm,.(empirical = 100*mean(actual_mwh<=forecast),
TOD = "All"),
by=c("team","quantile")],
forecast_data[(hour(dtm)<7.5 | hour(dtm)>=20) & dtm %in% include_dtm,
.(empirical = 100*mean(actual_mwh<=forecast),
TOD = "Overnight"),
by=c("team","quantile")],
forecast_data[(hour(dtm)>=7.5 & hour(dtm)<20) & dtm %in% include_dtm,
.(empirical = 100*mean(actual_mwh<=forecast),
TOD = "Daytime"),
by=c("team","quantile")])
reliability_data <- reliability_data[team %in% team_include]
plot_data <- reliability_data[team%in%top_teams_fc[1:5]]
plot_data$team <- factor(plot_data$team,levels = top_teams_fc)
rel_plot <- ggplot(plot_data,aes(x=quantile,y=empirical,color=team)) +
geom_line(data=reliability_data[!team%in%top_teams_fc[1:5]],
mapping=aes(x=quantile,y=empirical,group=team),
color=gray(0.1,0.1)) +
geom_point(aes(shape=team)) + geom_line() +
geom_abline(slope = 1,intercept = 0, linetype="dashed") +
facet_wrap(~TOD,ncol=3) +
guides(color=guide_legend(title="Team (Top 5)"),
shape=guide_legend(title="Team (Top 5)")) +
scale_color_discrete(breaks=top_teams_fc) +
scale_color_manual(values = color_pal_top10) +
xlab("Nominal [%]") + ylab("Empirical [%]") +
custom_theme +
theme(aspect.ratio = 1)
rel_plot
ggsave(filename = paste0("figs/reliability.",fig_format), rel_plot,
width = 1.5*fig_size_in[1],height = fig_size_in[2],units = "in")
ggsave(filename = paste0("figs/reliability.","svg"), rel_plot,
width = 1.5*fig_size_in[1],height = fig_size_in[2],units = "in")
merge(forecast_score_plot[hour(dtm)>=7.5 & hour(dtm)<20,
.(day=mean(pinball)),by=team],
forecast_score_plot[hour(dtm)<7.5 | hour(dtm)>=20,
.(night=mean(pinball)),by=team],
by = "team")[order(day)]
?cbind
merge(forecast_score_plot[.(All=mean(pinball)),by=team],
merge(forecast_score_plot[hour(dtm)>=7.5 & hour(dtm)<20,
.(Daytime=mean(pinball)),by=team],
forecast_score_plot[hour(dtm)<7.5 | hour(dtm)>=20,
.(Nighttime=mean(pinball)),by=team],
by = "team"),
by = "team")
forecast_score_plot[.(All=mean(pinball)),by=team]
merge(forecast_score_plot[,.(All=mean(pinball)),by=team],
merge(forecast_score_plot[hour(dtm)>=7.5 & hour(dtm)<20,
.(Daytime=mean(pinball)),by=team],
forecast_score_plot[hour(dtm)<7.5 | hour(dtm)>=20,
.(Nighttime=mean(pinball)),by=team],
by = "team"),
by = "team")
merge(forecast_score_plot[,.(All=mean(pinball)),by=team],
merge(forecast_score_plot[hour(dtm)>=7.5 & hour(dtm)<20,
.(Daytime=mean(pinball)),by=team],
forecast_score_plot[hour(dtm)<7.5 | hour(dtm)>=20,
.(Nighttime=mean(pinball)),by=team],
by = "team"),
by = "team")[order(All)]
pinball_tod_table <- merge(forecast_score_plot[,.(All=mean(pinball)),by=team],
merge(forecast_score_plot[hour(dtm)>=7.5 & hour(dtm)<20,
.(Daytime=mean(pinball)),by=team],
forecast_score_plot[hour(dtm)<7.5 | hour(dtm)>=20,
.(Nighttime=mean(pinball)),by=team],
by = "team"),
by = "team")[order(All)]
print(xtable(pinball_tod_table), include.rownames=FALSE)
pinball_tod_table <- merge(forecast_score_plot[,.(All=mean(pinball)),by=team],
merge(forecast_score_plot[hour(dtm)>=7.5 & hour(dtm)<20,
.(Daytime=mean(pinball)),by=team],
forecast_score_plot[hour(dtm)<7.5 | hour(dtm)>=20,
.(Overnight=mean(pinball)),by=team],
by = "team"),
by = "team")[order(All)]
print(xtable(pinball_tod_table), include.rownames=FALSE)
## Set-up ######################################################################
require(dplyr)
require(data.table)
require(ggplot2)
require(ggridges)
require(xtable)
library(latex2exp)
require(patchwork)
require(rstudioapi)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
###Fig format
fig_format <- "pdf"
fig_size_in <- c(8,4)
custom_theme <- theme_bw() + theme(
text=element_text(size=20,family="serif"),
strip.background =element_rect(fill="white"))
color_pal_top10 <- RColorBrewer::brewer.pal(10,"Paired")
### Trades, prices and revenue, with missed submissions filled
trade_data <- fread("data/trades.csv")
trade_data[team=="à¼¼ ã\u0081¤ â—•_â—• à¼½ã\u0081¤",team:="༼ つ ◕_◕ ༽つ"]
### Pinball score by timestamp with missed submissions filled
forecast_score <- fread("data/pinball.csv")
forecast_score[team=="à¼¼ ã\u0081¤ â—•_â—• à¼½ã\u0081¤",team:="༼ つ ◕_◕ ༽つ"]
### Raw forecast submissions, outturn and pinball, missed submissions not filled
forecast_data <- fread("data/forecasts.csv")
forecast_data[team=="à¼¼ ã\u0081¤ â—•_â—• à¼½ã\u0081¤",team:="༼ つ ◕_◕ ༽つ"]
### Energy data
energy_data <- rbind(fread("data/Energy_Data_20200920_20240118.csv"),
fread("data/Energy_Data_20240119_20240519.csv"))
### leaderboard
leaderboard <- fread("data/overall_leaderboard.csv")
leaderboard[Team=="à¼¼ ã\u0081¤ â—•_â—• à¼½ã\u0081¤",Team:="༼ つ ◕_◕ ༽つ"]
### Repot data
reports <- fread("data/HEFTcom Reports.csv",
skip = 0,header = T)[-(1:2),]
reports[9,RecipientFirstName:="༼ つ ◕_◕ ༽つ"]
setnames(reports,"RecipientFirstName","team")
## Leaderboard #################################################################
full_leaderboard <- merge(
forecast_score[,.(Pinball=round(mean(pinball),2),
Report=report[1],
Student=verified_student[1]),
by="team"],
trade_data[,.(Revenue=round(sum(revenue)/1e6,2),
`Missed submissions`=round(sum(filled)/48)),
by="team"],
by="team",all=T)
full_leaderboard[Report==T & `Missed submissions`<=5 & !team %in% c("Benchmark","quantopia"),
`Forecasting rank`:=rank(Pinball)]
full_leaderboard[Report==T & `Missed submissions`<=5 & !team %in% c("Benchmark","quantopia")
,`Trading rank`:=rank(-Revenue)]
full_leaderboard[,`Combined score`:=`Trading rank`+`Forecasting rank`+`Forecasting rank`/100]
full_leaderboard[!is.na(`Combined score`),`Combined rank`:=rank(`Combined score`)]
full_leaderboard[,`Combined score`:=NULL]
full_leaderboard <- full_leaderboard[order(Pinball),.(Team=team,Pinball,Revenue,`Forecasting rank`,`Trading rank`,`Combined rank`,Report,`Missed submissions`,Student)]
print(xtable(full_leaderboard), include.rownames=FALSE)
forecast_data_filled <- forecast_data
forecast_data_filled[,filled:=F]
for(t in forecast_data[team!="Benchmark",unique(team)]){
missing_dtm <- unique(forecast_data[!forecast_data[,dtm] %in% forecast_data[team==t,dtm],dtm])
fill_data <- forecast_data[team=="Benchmark" & dtm %in% missing_dtm,]
fill_data[,filled:=T]
fill_data[,team:=t]
forecast_data_filled <- rbind(forecast_data_filled,fill_data)
}
forecast_trade <- merge(forecast_data_filled[,.(dtm, team, quantile, forecast, actual_mwh, pinball,filled)],
trade_data[,.(dtm, team, market_bid, imbalance_price, price, revenue)],
by=c("dtm", "team"),
all = T)
forecast_trade[,Pinball:=mean(pinball,na.rm=T),by="team"]
forecast_trade[,unique_forecasts:=length(unique(forecast)),
by=c("dtm","team")]
forecast_trade[,bid_as_forecast := forecast*price + (actual_mwh - forecast) * (imbalance_price - 0.07*(actual_mwh - forecast))]
plot_data <- forecast_trade[quantile==50,.(Revenue=sum(revenue)/1e6,
`Revenue (q50)`=sum(bid_as_forecast)/1e6,
Pinball=Pinball[1]),by="team"]
plot_data[,Gain:=Revenue - `Revenue (q50)`]
rev_s_vs_q50 <- ggplot(plot_data[Pinball<31],
aes(x=Pinball,ymin=`Revenue (q50)`,ymax=Revenue)) +
geom_errorbar(width=0) +
geom_point(aes(y=Revenue),shape=16,color="green") +
geom_point(aes(y=`Revenue (q50)`),shape=3,color="red") +
xlab("Pinball [MWh]") +
ylab("Revenue [£m]") +
ggtitle(TeX("Revenue from Strategic ($\\bullet$) vs $q_{50\\%}$ (+) Bidding")) +
custom_theme
rev_s_vs_q50
summary(lm(`Revenue (q50)` ~ Pinball, data = plot_data[Pinball<31]))
confint(lm(`Revenue (q50)` ~ Pinball, data = plot_data[Pinball<31]))
confint(lm(`Revenue` ~ Pinball, data = plot_data[Pinball<31 & Revenue > 87]))
forecast_trade
forecast_trade[quantile %in% c(10,90),Pinball_10_90:=mean(pinball,na.rm=T),by="team"]
forecast_trade
forecast_trade[quantile %in% c(10,90),Pinball_10_90:=mean(pinball,na.rm=T),by="team"]
plot_data <- forecast_trade[quantile==0,.(Revenue=sum(revenue)/1e6,
Pinball=Pinball_10_90[1]),by="team"]
pinball_10_90_vs_rev <- ggplot(plot_data[Pinball<400 & Revenue,],
aes(x=Pinball,y=Revenue)) +
geom_point() +
regression_line +
xlab("Pinball (10% and 90% quantiles only) [MWh]") +
ylab("Revenue [£m]") +
custom_theme
pinball_10_90_vs_rev <- ggplot(plot_data[Pinball<400 & Revenue,],
aes(x=Pinball,y=Revenue)) +
geom_point() +
xlab("Pinball (10% and 90% quantiles only) [MWh]") +
ylab("Revenue [£m]") +
custom_theme
pinball_vs_rev
pinball_10_90_vs_rev
pinball_10_90_vs_rev <- ggplot(plot_data[Pinball<400,],
aes(x=Pinball,y=Revenue)) +
geom_point() +
xlab("Pinball (10% and 90% quantiles only) [MWh]") +
ylab("Revenue [£m]") +
custom_theme
pinball_10_90_vs_rev
forecast_trade[quantile %in% c(10,90),Pinball_10_90:=mean(pinball,na.rm=T),by="team"]
plot_data <- forecast_trade[quantile==0,.(Revenue=sum(revenue)/1e6,
Pinball=Pinball_10_90[1]),by="team"]
plot_data
plot_data <- forecast_trade[quantile==10,.(Revenue=sum(revenue)/1e6,
Pinball=Pinball_10_90[1]),by="team"]
pinball_10_90_vs_rev <- ggplot(plot_data[Pinball<400,],
aes(x=Pinball,y=Revenue)) +
geom_point() +
xlab("Pinball (10% and 90% quantiles only) [MWh]") +
ylab("Revenue [£m]") +
custom_theme
plot_data <- forecast_trade[quantile==10,.(Revenue=sum(revenue)/1e6,
Pinball=Pinball_10_90[1]),by="team"]
plot_data
pinball_10_90_vs_rev <- ggplot(plot_data,
aes(x=Pinball,y=Revenue)) +
geom_point() +
xlab("Pinball (10% and 90% quantiles only) [MWh]") +
ylab("Revenue [£m]") +
custom_theme
pinball_10_90_vs_rev
pinball_10_90_vs_rev <- ggplot(plot_data[Pinball<50],
aes(x=Pinball,y=Revenue)) +
geom_point() +
xlab("Pinball (10% and 90% quantiles only) [MWh]") +
ylab("Revenue [£m]") +
custom_theme
pinball_10_90_vs_rev
pinball_10_90_vs_rev <- ggplot(plot_data[Pinball<25],
aes(x=Pinball,y=Revenue)) +
geom_point() +
xlab("Pinball (10% and 90% quantiles only) [MWh]") +
ylab("Revenue [£m]") +
custom_theme
pinball_10_90_vs_rev
ggsave(filename = paste0("figs/pinball_10_90_vs_rev.",fig_format), pinball_10_90_vs_rev,
width = fig_size_in[1],height = fig_size_in[2],units = "in")
rev_s_vs_q50 <- ggplot(plot_data[Pinball<31],
aes(x=Pinball,ymin=`Revenue (q50)`,ymax=Revenue)) +
geom_errorbar(width=0) +
geom_point(aes(y=Revenue),shape=16,color="green") +
geom_point(aes(y=`Revenue (q50)`),shape=3,color="red") +
xlab("Pinball [MWh]") +
ylab("Revenue [£m]") +
ggtitle(TeX("Revenue from bids as submitted ($\\bullet$) vs bidding $q_{50\\%}$ (+)")) +
custom_theme
rev_s_vs_q50
plot_data <- forecast_trade[quantile==50,.(Revenue=sum(revenue)/1e6,
`Revenue (q50)`=sum(bid_as_forecast)/1e6,
Pinball=Pinball[1]),by="team"]
plot_data[,Gain:=Revenue - `Revenue (q50)`]
rev_s_vs_q50 <- ggplot(plot_data[Pinball<31],
aes(x=Pinball,ymin=`Revenue (q50)`,ymax=Revenue)) +
geom_errorbar(width=0) +
geom_point(aes(y=Revenue),shape=16,color="green") +
geom_point(aes(y=`Revenue (q50)`),shape=3,color="red") +
xlab("Pinball [MWh]") +
ylab("Revenue [£m]") +
ggtitle(TeX("Revenue from bids as submitted ($\\bullet$) vs bidding $q_{50\\%}$ (+)")) +
custom_theme
rev_s_vs_q50
rev_s_vs_q50 <- ggplot(plot_data[Pinball<31],
aes(x=Pinball,ymin=`Revenue (q50)`,ymax=Revenue)) +
geom_errorbar(width=0) +
geom_point(aes(y=Revenue),shape=16,color="green") +
geom_point(aes(y=`Revenue (q50)`),shape=3,color="red") +
xlab("Pinball [MWh]") +
ylab("Revenue [£m]") +
ggtitle(TeX("Revenue from submitted bids ($\\bullet$) vs bidding $q_{50\\%}$ (+)")) +
custom_theme
rev_s_vs_q50
ggsave(filename = paste0("figs/rev_strategic_vs_q50.",fig_format),
rev_s_vs_q50,
device = cairo_pdf,
width = fig_size_in[1], height = fig_size_in[2], units = "in")
forecast_data_filled[,Pinball:=mean(pinball),by=Team]
forecast_data_filled[,Pinball:=mean(pinball),by=team]
forecast_data_filled
forecast_data_filled[,mean(pinball),by=team]
forecast_data_filled[,.(Pinball=mean(pinball)),by=team]
forecast_data_filled[pinball %in% c(10,90),.(Pinball_10_90=mean(pinball)),by=team]
forecast_data_filled[quantile %in% c(10,90),.(Pinball_10_90=mean(pinball)),by=team]
merge(forecast_data_filled[,.(Pinball=mean(pinball)),by=team],
forecast_data_filled[quantile %in% c(10,90),.(Pinball_10_90=mean(pinball)),by=team])
pinball_vs_pinball_10_90 <- ggplot(plot_data[Pinball<25],
aes(x=Pinball_10_90,y=Pinball)) +
geom_point() +
xlab("Pinball (10% and 90% quantiles only) [MWh]") +
ylab("Pinball [MWh]") +
custom_theme
plot_data = merge(forecast_data_filled[,.(Pinball=mean(pinball)),by=team],
forecast_data_filled[quantile %in% c(10,90),.(Pinball_10_90=mean(pinball)),by=team])
pinball_vs_pinball_10_90 <- ggplot(plot_data[Pinball<25],
aes(x=Pinball_10_90,y=Pinball)) +
geom_point() +
xlab("Pinball (10% and 90% quantiles only) [MWh]") +
ylab("Pinball [MWh]") +
custom_theme
pinball_vs_pinball_10_90
pinball_vs_pinball_10_90 <- ggplot(plot_data[],
aes(x=Pinball_10_90,y=Pinball)) +
geom_point() +
xlab("Pinball (10% and 90% quantiles only) [MWh]") +
ylab("Pinball [MWh]") +
custom_theme
pinball_vs_pinball_10_90
pinball_vs_pinball_10_90 <- ggplot(plot_data[Pinball<250],
aes(x=Pinball_10_90,y=Pinball)) +
geom_point() +
xlab("Pinball (10% and 90% quantiles only) [MWh]") +
ylab("Pinball [MWh]") +
custom_theme
plot_data
pinball_vs_pinball_10_90 <- ggplot(plot_data[Pinball<250],
aes(x=Pinball_10_90,y=Pinball)) +
geom_point() +
xlab("Pinball (10% and 90% quantiles only) [MWh]") +
ylab("Pinball [MWh]") +
custom_theme
pinball_vs_pinball_10_90
pinball_vs_pinball_10_90 <- ggplot(plot_data[Pinball<30],
aes(x=Pinball_10_90,y=Pinball)) +
geom_point() +
xlab("Pinball (10% and 90% quantiles only) [MWh]") +
ylab("Pinball [MWh]") +
custom_theme
pinball_vs_pinball_10_90
pinball_vs_pinball_10_90 <- ggplot(plot_data[Pinball<50],
aes(x=Pinball_10_90,y=Pinball)) +
geom_point() +
xlab("Pinball (10% and 90% quantiles only) [MWh]") +
ylab("Pinball [MWh]") +
custom_theme
pinball_vs_pinball_10_90
trade_stats <- trade_data %>%
filter(team %in% top_teams_rev) %>%
mutate(team = factor(team, levels=top_teams_rev)) %>%
group_by(team) %>%
summarise(#`Total revenue` = sum(revenue),
`Win rate [-]` = mean(as.integer(revenue > 0)),
`Relative bid volume [-]` = sum(market_bid) / sum(actual_mwh),
`Trade VWAP [GBP/MWh]` = sum(revenue) / sum(market_bid),
`Production VWAP [GBP/MWh]` = sum(revenue) / sum(actual_mwh),
`Sharpe ratio [-]` = mean(revenue) / sd(revenue),
`Sortino ratio [-]` = mean(revenue) / sd(if_else(revenue < 0, revenue, NA_real_), na.rm=TRUE),
# `Profit factor [-]` = sum(if_else(revenue > 0, revenue, NA_real_), na.rm = T) / sum(if_else(revenue < 0, revenue, NA_real_), na.rm = T),
`5\\% VaR [GBP]` = quantile(revenue, probs = 0.05),
`5\\% ES [GBP]` = mean(if_else(revenue <= `5\\% VaR [GBP]`, revenue, NA_real_), na.rm = T)) %>%
data.table(.)
